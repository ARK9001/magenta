# Copyright 2016 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

import("//build/convert_to_raw.gni")

# This target will be built if no target is specified when invoking Ninja.
group("default") {
  deps = [
    ":magenta_bin",
    ":tools",
  ]
}

executable("magenta") {
  output_extension = "elf"
  configs -= [ "//build:user_defaults" ]
  configs += [ "//build:kernel_defaults" ]
  deps = [
    "//kernel/top",
  ]
  if (target_cpu == "x64") {
    deps += [
      "//kernel/arch/x86",
      "//kernel/arch/x86:kernel_ld",
    ]
    if (target_platform == "pc") {
      deps += [ "//kernel/project:pc-x86-64" ]
    } else if (target_platform == "qemu") {
      deps += [ "//kernel/project:qemu-x86-64" ]
    }
  } else if (target_cpu == "arm") {
    deps += [
      "//kernel/arch/arm",
      "//kernel/arch/arm:onesegment_ld",
      "//kernel/project:qemu-arm32",
    ]
  } else if (target_cpu == "arm64") {
    deps += [
      "//kernel/arch/arm64",
      "//kernel/arch/arm64:onesegment_ld",
      "//kernel/project:qemu-arm64",
    ]
  }
}

convert_to_raw("magenta_bin") {
  input = "${root_build_dir}/magenta.elf"
  output = "${root_build_dir}/magenta.bin"
  deps = [
    ":magenta",
  ]
}

# Copy tools/ binaries from the host_toolchain output directory
# to the main output directory so they're easier to find and invoke.
copy("tools") {
  tools = [
    "bootserver",
    "loglistener",
  ]

  deps = []
  sources = []
  foreach(tool, tools) {
    tool_label = "//system/tools:$tool($host_toolchain)"
    tool_out = get_label_info(tool_label, "root_out_dir")
    deps += [ tool_label ]
    sources += [ "$tool_out/$tool" ]
  }

  outputs = [
    "$root_out_dir/{{source_file_part}}",
  ]
}
