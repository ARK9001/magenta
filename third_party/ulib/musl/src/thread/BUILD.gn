source_set("thread") {
  configs = []

  # Use relative path to make the build relocatable
  configs += [ "../..:musl_config" ]
  sources = [
    "__timedwait.c",
    "__tls_get_addr.c",
    "__wait.c",
    "call_once.c",
    "cnd_broadcast.c",
    "cnd_destroy.c",
    "cnd_init.c",
    "cnd_signal.c",
    "cnd_timedwait.c",
    "cnd_wait.c",
    "lock_ptc.c",
    "mtx_destroy.c",
    "mtx_init.c",
    "mtx_lock.c",
    "mtx_timedlock.c",
    "mtx_trylock.c",
    "mtx_unlock.c",
    "thrd_create.c",
    "thrd_exit.c",
    "thrd_join.c",
    "thrd_sleep.c",
    "thrd_yield.c",
    "tls.c",
    "tss_create.c",
    "tss_delete.c",
    "tss_set.c",
    "vmlock.c",
  ]

  if (target_cpu == "arm") {
    sources += [
      "arm/__unmapself.s",
      "arm/atomics.s",
      "arm/clone.s",
      "arm/syscall_cp.s",
    ]
  } else if (target_cpu == "arm64") {
    sources += [
      "aarch64/__unmapself.s",
      "aarch64/clone.s",
      "aarch64/syscall_cp.s",
    ]
  } else if (target_cpu == "x64") {
    sources += [
      "x86_64/clone.s",
      "x86_64/syscall_cp.s",
    ]
  } else {
    sources += [
      "__unmapself.c",
      "clone.c",
      "syscall_cp.c",
    ]
    deps = [
      ":thread_no_stack_protector",
    ]
  }
}

if (target_cpu != "arm" && target_cpu != "arm64" && target_cpu != "x64") {
  source_set("thread_no_stack_protector") {
    visibility = [ ":thread" ]
    configs = [ "//build:no_stack_protector" ]
    sources = [
      "__set_thread_area.c",
    ]
  }
}
