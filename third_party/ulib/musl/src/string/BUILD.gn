source_set("string") {
  configs = []

  # Use relative path to make the build relocatable
  configs += [ "../..:musl_config" ]
  sources = [
    "bcmp.c",
    "bcopy.c",
    "bzero.c",
    "index.c",
    "memccpy.c",
    "memchr.c",
    "memcmp.c",
    "memmem.c",
    "mempcpy.c",
    "memrchr.c",
    "rindex.c",
    "stpcpy.c",
    "stpncpy.c",
    "strcasecmp.c",
    "strcasestr.c",
    "strcat.c",
    "strchr.c",
    "strchrnul.c",
    "strcmp.c",
    "strcpy.c",
    "strcspn.c",
    "strdup.c",
    "strerror_r.c",
    "strlcat.c",
    "strlcpy.c",
    "strlen.c",
    "strncasecmp.c",
    "strncat.c",
    "strncmp.c",
    "strncpy.c",
    "strndup.c",
    "strnlen.c",
    "strpbrk.c",
    "strrchr.c",
    "strsep.c",
    "strsignal.c",
    "strspn.c",
    "strstr.c",
    "strtok.c",
    "strtok_r.c",
    "strverscmp.c",
    "swab.c",
    "wcpcpy.c",
    "wcpncpy.c",
    "wcscasecmp.c",
    "wcscasecmp_l.c",
    "wcscat.c",
    "wcschr.c",
    "wcscmp.c",
    "wcscpy.c",
    "wcscspn.c",
    "wcsdup.c",
    "wcslen.c",
    "wcsncasecmp.c",
    "wcsncasecmp_l.c",
    "wcsncat.c",
    "wcsncmp.c",
    "wcsncpy.c",
    "wcsnlen.c",
    "wcspbrk.c",
    "wcsrchr.c",
    "wcsspn.c",
    "wcsstr.c",
    "wcstok.c",
    "wcswcs.c",
    "wmemchr.c",
    "wmemcmp.c",
    "wmemcpy.c",
    "wmemmove.c",
    "wmemset.c",
  ]
  if (target_cpu == "arm") {
    sources += [
      "memcpy.c",
      "memmove.c",
      "memset.c",
    ]
  } else if (target_cpu == "arm64") {
    sources += [
      "memcpy.c",
      "memmove.c",
      "memset.c",
    ]
  } else if (target_cpu == "x64") {
    sources += [
      "x86_64/memcpy.s",
      "x86_64/memmove.s",
      "x86_64/memset.s",
    ]
  } else {
    sources += [ "memmove.c" ]
    deps = [
      ":string_no_stack_protector",
    ]
  }
}

if (target_cpu != "arm" && target_cpu != "arm64" && target_cpu != "x64") {
  source_set("string_no_stack_protector") {
    visibility = [ ":string" ]
    configs = []
    configs += [
      # Use relative path to make the build relocatable
      "../..:musl_config",
      "//build:no_stack_protector",
    ]
    sources = [
      "memcpy.c",
      "memset.c",
    ]
  }
}
